var ams=ams||{};ams.Utils={tid:null,isHomologationEnvironment:function(){return window.location.pathname.includes("homologation")||"127.0.0.1"==window.location.hostname},setMapHeight:function(){$("#map").height(window.innerHeight-$("footer.footer").height()-$("#content").height())},onWindowResize:function(){ams.Utils.tid&&window.clearTimeout(ams.Utils.tid),ams.Utils.tid=window.setTimeout(()=>{ams.Utils.tid=null,ams.Utils.setMapHeight(),ams.App._onWindowResize()},200)},getServerConfigParam:function(param){return $('meta[name="'+param+'"]').attr("content")},startApp:function(generalConfig){if(void 0===generalConfig){let b=localStorage.getItem("ams.previous.biome.setting.selection");ams.Utils.biomeChanges(null!==b?b:ams.defaultBiome)}else{ams.Auth.evaluate(),ams.Utils.setMapHeight();var biome=generalConfig.appBiome.split(",")[0];ams.Config=ams.BiomeConfig[biome],ams.Config.allBiomes=JSON.parse(generalConfig.biomes.replace(/'/g,'"')),ams.Config.allMunicipalitiesGroup=JSON.parse(generalConfig.municipalities_group.replace(/'/g,'"')),ams.Config.landUses=JSON.parse(generalConfig.land_uses.replace(/'/g,'"')),ams.Config.biome=generalConfig.appBiome,ams.Config.appSelectedSubset=generalConfig.selected_subset,ams.Config.appSelectedBiomes=JSON.parse(generalConfig.selected_biomes.replace(/'/g,'"')),ams.Config.appSelectedMunicipalitiesGroup=generalConfig.selected_municipalities_group,ams.Config.publishDate=generalConfig.publish_date,ams.Config.appSelectedGeocodes=JSON.parse(generalConfig.selected_geocodes),ams.Config.appAllMunicipalities=JSON.parse(generalConfig.municipalities.replace(/'/g,'"'));var spatialUnitsSubset=new ams.Map.SpatialUnits(JSON.parse(generalConfig.spatial_units_info_for_subset.replace(/'/g,'"')),ams.Config.defaultFilters.spatialUnit),appClassGroups=new ams.Map.AppClassGroups(JSON.parse(generalConfig.deter_class_groups.replace(/'/g,'"'))),geoserverUrl=generalConfig.geoserver_url;try{ams.App.run(geoserverUrl,spatialUnitsSubset,appClassGroups)}catch(error){console.log(error),ams.Utils.resetlocalStorage()}}},restartApp:function(){Authentication.eraseCookie(Authentication.tokenKey);var mapDiv=$("#map");mapDiv&&(mapDiv.remove(),$("#panel_container").append("<div id='map'>")),ams.Utils.setMapHeight(),ams.Utils.startApp()},biomeChanges:function(selectedBiome,selectedSubset,selectedMunicipalitiesGroup,selectedGeocodes){void 0===selectedSubset&&(selectedSubset=ams.defaultSubset),void 0===selectedMunicipalitiesGroup&&(selectedMunicipalitiesGroup=ams.defaultMunicipalitiesGroup),void 0===selectedGeocodes&&(selectedGeocodes="");const loadConfig=new Promise((resolve,reject)=>{async function getConfigByBiome(selectedBiome,selectedSubset,selectedMunicipalitiesGroup,selectedGeocodes){let response=await fetch("biome/config?targetbiome="+selectedBiome+"&subset="+selectedSubset+"&municipalitiesGroup="+selectedMunicipalitiesGroup+"&isAuthenticated="+ams.Auth.isAuthenticated()+"&geocodes="+selectedGeocodes);if(response&&response.ok){let generalConfig=await response.json();generalConfig.appBiome?(localStorage.setItem("ams.biome.config."+selectedBiome,JSON.stringify(generalConfig)),localStorage.setItem("ams.config.created.at",(new Date).toISOString().split("T")[0]),localStorage.setItem("ams.config.subset",selectedSubset),localStorage.setItem("ams.config.municipalitiesGroup",selectedMunicipalitiesGroup),localStorage.setItem("ams.config.geocodes",selectedGeocodes),ams.Utils.startApp(generalConfig),resolve()):(console.log("HTTP-Error: "+response.status+" on biome changes"),$(".toast").toast("show"),$(".toast-body").html("Encontrou um erro na solicitação ao servidor."),reject("HTTP-Error: "+response.status+" on biome changes"))}else response&&console.log("HTTP-Error: "+response.status+" on biome changes"),$(".toast").toast("show"),$(".toast-body").html("Encontrou um erro na solicitação ao servidor."),reject("HTTP-Error: "+response.status+" on biome changes")}delete ams.Map.PopupControl._popupReference,ams.Map.PopupControl._infoBody=[];let mapDiv=$("#map");if(mapDiv&&(mapDiv.remove(),$("#panel_container").append("<div id='map'>")),ams.Utils.setMapHeight(),ams.Auth.resetWorkspace(),null!==localStorage.getItem("ams.biome.config."+selectedBiome)&&null!==localStorage.getItem("ams.config.created.at")){let createdAt,nowDate;if(new Date(localStorage.getItem("ams.config.created.at")+"T03:00:00.000Z")<new Date((new Date).toISOString().split("T")[0]+"T03:00:00.000Z")||localStorage.getItem("ams.config.subset")!=selectedSubset||localStorage.getItem("ams.config.municipalitiesGroup")!=selectedMunicipalitiesGroup||localStorage.getItem("ams.config.selectedGeocodes")!=selectedGeocodes){for(let p in ams.BiomeConfig)ams.BiomeConfig.hasOwnProperty(p)&&localStorage.removeItem("ams.biome.config."+p);getConfigByBiome(selectedBiome,selectedSubset,selectedMunicipalitiesGroup,selectedGeocodes)}else{let biomeConfiguration=JSON.parse(localStorage.getItem("ams.biome.config."+selectedBiome));ams.Utils.startApp(biomeConfiguration),resolve()}}else getConfigByBiome(selectedBiome,selectedSubset,selectedMunicipalitiesGroup,selectedGeocodes)});return loadConfig},numberFormat:function(n){let sp;return 2==(n+="").split(".").length?parseFloat(n).toFixed(ams.Config.floatDecimals):parseInt(n)},resetlocalStorage:function(){localStorage.clear()},assert:function(condition,msg){if(!condition)throw new Error(msg||"assertion error")}};