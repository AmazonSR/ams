<<<<<<< Updated upstream
var ams=ams||{};ams.RiskThresholdHandler={_sliderRange:[],_control:null,_date:null,init:function(map){this._sliderRange=ams.Config.risk.range,this._date=ams.RiskThresholdHandler.getLastRiskDate(dateLabel),this._control||(this._control=L.control.RiskThresholdHandler({range:this._sliderRange,date:this._date})),this._control.addTo(map),this._control._highlightSelectedLabel(this._sliderRange[0]),this._control._updateStatusAndDateLabel(this._date)},remove:function(map){this._control&&(map.removeControl(this._control),this._control=null)},getLastRiskDate:function(lastRiskDate){return dateLabel=lastRiskDate,dateLabel},onChange:function(){this._control._onInputChange()}};
=======
var ams=ams||{};ams.RiskThresholdHandler={_sliderRange:[],_control:null,init:function(map){this._sliderRange=ams.Config.risk.range,this._control||(this._control=L.control.RiskThresholdHandler({range:this._sliderRange})),this._control.addTo(map),this._control._highlightSelectedLabel(this._sliderRange[0])},remove:function(map){this._control&&(map.removeControl(this._control),this._control=null)},onChange:function(){ams.App._riskThreshold=this._control._onInputChange(),ams.App._suViewParams.updateRiskThreshold(ams.App._riskThreshold),ams.App._updateSpatialUnitLayer()}};
>>>>>>> Stashed changes
